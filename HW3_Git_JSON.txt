
JSON
 1. Создать внешний репозиторий c названием JSON. 
 ---> В GitHub кликнуть на кнопку New --> в Repository name прописать JSON --> 
 сделать репозиторий публичным -->  Add a README file --> Кликнуть на кнопку Creat repository
 2. Клонировать репозиторий JSON на локальный компьютер. 
 ---> git clone ссылка на репозиторий (в необходимом репозитории кликнуть справа на кнопку Code и скопировать HTTPS)
 3. Внутри локального JSON создать файл “new.json”. 
 ---> touch new.json
 4. Добавить файл под гит. 
 ---> git add new.json
 5. Закоммитить файл. 
 ---> git commit -m "the first json"
 6. Отправить файл на внешний GitHub репозиторий. 
 ---> git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
 будущая желаемая зарплата). Всё написать в формате JSON. 
 ---> vim new.json --> press I
 {
  "name": "Korol Dmitriy",
  "age": 32,
  "animals": "null",
  "salary": "2000 $"
 }
  ESC - :wq
 8. Отправить изменения на внешний репозиторий. 
 ---> git add new.json --> git commit -m "questionnaire" --> git push
 9. Создать файл preferences.json 
 ---> touch preferences.json 
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, 
 страна которую хотели бы посетить) в формате JSON. 
 ---> vim preferences.json --> press I
 {
   "movie":"What we do in the shadows",
   "show":"Rick and Morty",
   "food":"rare steak",
   "season":"winter",
   "country":"Japan"
 }
 Жму ESC - :wq
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
 ---> touch skills.json --> vim skills.json --> press I 
 {
   "skills": "git bash, git, JavaScript, QA theory"
 }
 Жму ESC - :wq
 12. Отправить сразу 2 файла на внешний репозиторий.
 ---> git add . --> git commit -m "the second and third json" --> git push
 13. На веб интерфейсе создать файл bug_report.json.
 --->  в репозитории JSON кликнуть на кнопку ADD FILE --> creat new file 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
 ---> вписать внизу страницы
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
 ---> в репозитории JSON находим нужный файл и кликаем по его названию --> справа кликаем на значок карандаша (редактирование) --> 
 {
"Bug_id": 22,
"Title": "the exchange rate changes when the widget is resized",
"Severity": "Major",
"Priority": "Medium",
"Environment": "SGS 10+(SM-G975F/DS), android 12 (G975FXXUEHVB9), ONE UI 4.1,  5x6, 2280x1080",
"Precondition": "1) Install the AndroidGridTest application",
"STR": "1) add widget through smartphone settings",
        "2) resize widget from small to large (vertically and horizontally)",
"AR":  "the data in the widget does not change",
"ER": "1) BTC/USD price has changed (resizing the widget vertically)",
      "2) percentages change from positive to negative (resizing the widget horizontally)"
 }

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 ---> кликаю внизу на кнопку Commit changes (сохранить)
 17. Синхронизировать внешний и локальный репозиторий JSON
 ---> git pull (в терминале)